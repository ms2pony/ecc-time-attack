

# This file was *autogenerated* from the file t1.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0xFFFFFFFE0000000075A30D1B9038A115 = Integer(0xFFFFFFFE0000000075A30D1B9038A115); _sage_const_0xc565991b6f027c664744b08071cd2c04 = Integer(0xc565991b6f027c664744b08071cd2c04); _sage_const_20000 = Integer(20000); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
modulo = _sage_const_0xFFFFFFFE0000000075A30D1B9038A115 
d = _sage_const_0xc565991b6f027c664744b08071cd2c04 

lattice_size = _sage_const_20000 
with open(r"/home/tam/github/ecc-time-attack/out/data.log", "r") as f:
    content = f.readlines()
f.close()
digests = []
signatures = []
nonces = []

# Parse it
for item in content[:lattice_size]:
    item = eval(item)
    digests.append(int(item['m']))
    signatures.append((int(item['r']), int(item['s'])))
    nonces.append(int(item['k']))

count = _sage_const_0 
falseList = []
for i in range(lattice_size):
    r = signatures[i][_sage_const_0 ]
    s = signatures[i][_sage_const_1 ]
    Hm = digests[i]
    k = nonces[i]
    k_inv = inverse_mod(k, modulo)
    s1 = Mod(k_inv*(Hm+r*d), modulo)
    # print(hex(s1))
    if(s1 == s):
        count += _sage_const_1 
    else:
        falseList.append(i+_sage_const_1 )
print(count)
print(falseList)

